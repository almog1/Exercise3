
@{
    ViewBag.Title = "displayFile";
}

<!DOCTYPE html>
<html>
<body background="~/export-map-share.png" style="background-size:100% 100%; background-attachment:fixed">
    <canvas id="myCanvas" style="background-size:100% 100%; top:0; left:0; margin:0"></canvas>
    <script>
        var c = document.getElementById("myCanvas");
        c.width = window.innerWidth;
        c.height = window.innerHeight;
        c.style.position = "absolute";
        var ctx = c.getContext("2d");
        // the interval time that we get the lot&lat values from simulator
        var IntervalTime = 1000 *@Session["time"];  

        //the time of seconds we save the data to the file
        var TimeoutT = @Session["seconds"] * 1000 

        var isStartPoint = 1; // bool var if that point is the first point
        var oldNormalizedLon;
        var oldNormalizedLat;
        myTimer = (function () {
            $.post("@Url.Action("GetMessageFromSimulator")").done(function (xml){ //in post the data is in the string that returns from the function "getMessFromClient"
                var xmlDoc = $.parseXML(xml), $xml = $(xmlDoc);
                lon = $xml.find("Lon").text();
                lon = parseFloat(lon);
                lat = $xml.find("Lat").text();
                lat = parseFloat(lat);
                var newNormalizedLon = ((lon + 180) * (c.width / 360));
                var newNormalizedLat = ((lat + 90) * (c.height / 180));
                if (isStartPoint) {
                    isStartPoint = 0;
                    ctx.beginPath();
                    ctx.lineWidth = 2;
                    ctx.arc(normalizedLon, normalizedLat, 6, 0, Math.PI * 2);
                    ctx.fillStyle = "Red";
                    ctx.fill();
                    ctx.strokeStyle = "Black";
                    ctx.stroke();
                    ctx.closePath();
                    oldNormalizedLat = newNormalizedLat;
                    oldNormalizedLon = newNormalizedLon;
                } else {
                    ctx.beginPath();
                    ctx.lineWidth = 2;
                    ctx.lineJoin = 'round';
                    ctx.moveTo(oldNormalizedLon, oldNormalizedLat);
                    ctx.lineTo(newNormalizedLon, newNormalizedLat);

                    ctx.strokeStyle = "Red";
                    ctx.stroke();
                    ctx.closePath();
                }
            });
        });

        timeout = (function () {
            clearInterval(MyInterval)
            alert("Done!");
        });

        setTimeout(timeout, TimeoutT);
        var MyInterval = setInterval(myTimer, IntervalTime);
        myTimer();

    </script>
</body>
</html>

